<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/templates/main.xhtml">
    <!--PrimeFaces is a UI components library over the JSF framework (7 JavaServer Faces Technology).
    It has things like date pickers, data grids, graphics, carousels, etc.
    So many of the configurations and the coding has actually more to do with JSF -->


    <!--Explanation of sequence of Events in frontend:
    Here's a simplified sequence of events:

    1. User clicks the "CommitSearchRequest" button.
    2. The performLocationSearch method is invoked, updating the latitude and longitude values in weatherBean.
    3. The performWeatherApiRequest method is called directly within the commandButton action, and it can access the updated latitude and longitude values from weatherBean.
    4. Both methods execute within the same request-response cycle, so the bean state is available and consistent throughout.

    Since the view scope keeps the bean alive for the duration of the user's interaction with a specific view,
    both methods (performLocationSearch and performWeatherApiRequest) will operate on the same instance of the bean
    during the same view lifecycle.
    Therefore, any changes made in one method will be reflected in the other within the same view scope.
    -->
    <ui:define name="content">
        <h:form id="weatherForm">
            <p:panel header="Search for a location:">
                <p:autoComplete id="locationSearch" value="#{weatherBean.locationSearchInput}"
                                completeMethod="#{autoCompleteController.autoCompleteLocation}"
                                style="margin-right: 10px;" emptyMessage="no results"/>


                <p:commandButton value="Search" id="commitSearchRequest"
                                 action="#{weatherBean.performLocationSearch()}"
                                 update="weatherForm">
                </p:commandButton>
                <br/>
                <p:messages id="message" showDetail="true"/>
            </p:panel>

            <br/>
            
            <p:panel header="Weather overview for the next few days:" id="Response" rendered="#{weatherBean.isLocationAnswerDTOReady}">
                <div>
                    <h4>Location searched for:
                        #{weatherBean.location.city},
                        #{weatherBean.location.country}
                        <!-- check wether this gets rendered even when state is null-->
                        <h:outputText value=",#{weatherBean.location.state}"
                                      rendered="#{not empty weatherBean.location.state}"/>
                        <p:commandButton id="toggleFavorite"
                            action="#{weatherBean.toggleFavorite()}"
                            rendered="#{weatherBean.weatherDTO != null}" icon="pi pi-heart"
                            styleClass="#{weatherBean.isFavorite() ? 'rounded-button ui-button-help' : 'rounded-button ui-button-help ui-button-outlined'}"
                            update="toggleFavorite"/>
                    </h4>

                    <br/>

                    <h:panelGroup layout="block" style="display: flex;">

                        <h5 style="margin-top: 0;">Current weather</h5>
                        <h:panelGrid columns="2" >

                            <h:outputText value="Weather Description: #{weatherBean.weatherDTO.currentWeather().weather().description()}"/>
                            <h:graphicImage value="#imgUrl"/>
                            
                            <h:outputText value="Temperature: "/>
                            <h:outputText value="#{weatherBean.weatherDTO.currentWeather().temperature()} C"/>

                            <h:outputText value="FeelsLikeTemperature: "/>
                            <h:outputText value="#{weatherBean.weatherDTO.currentWeather().feelsLikeTemperature()} C"/>

                            <h:outputText value="Wind Speed: "/>
                            <h:outputText value="#{weatherBean.weatherDTO.currentWeather().windSpeed()} m/s"/>

                            <h:outputText value="Wind direction: "/>
                            <h:outputText value="#{weatherBean.weatherDTO.currentWeather().windDirection()} metrol. deg"/>

                        </h:panelGrid>
                    
                        <br/>

                    </h:panelGroup>

                    <br/>

                    <h5 style="margin-top:0" >Weather for the next 24 hours:</h5>
                    <h:form>
                        <div class="card">
                            <p:dataTable var="hourlyWeatherEntries" value="#{weatherBean.getHourlyWeatherEntries()}" style="font-size: 14px" >
                            
                                <p:column headerText="Time">
                                    <h:outputText value="#{weatherBean.formatInstantToHHMMWithoutTimezone(hourlyWeatherEntries.timestamp())}" />
                                </p:column>

                                <p:column headerText="Weather" style="width: 12%;">
                                    <h:outputText value="#{hourlyWeatherEntries.weather().description()}" style="font-size: 12px"/>
                                </p:column>

                                <p:column headerText="Temperature [C]">
                                    <h:outputText value="#{hourlyWeatherEntries.temperature()}" />
                                </p:column>

                                <p:column headerText="Feels Like Temperature [C]">
                                    <h:outputText value="#{hourlyWeatherEntries.feelsLikeTemperature()}" />
                                </p:column>

                                <p:column headerText="Wind speed [m/s]">
                                    <h:outputText value="#{hourlyWeatherEntries.windSpeed()}" />
                                </p:column>

                                <p:column headerText="Wind direction [metrol. deg]">
                                    <h:outputText value="#{hourlyWeatherEntries.windDirection()}" />
                                </p:column>

                                <p:column headerText="Pop [?]">
                                    <h:outputText value="#{hourlyWeatherEntries.probabilityOfPrecipitation()}" />
                                </p:column>

                            </p:dataTable>
                        </div>
                    </h:form>

                    <br/>

                    <h5 style="margin-top:0" >Weather for today and the next 3 days:</h5>
                    <h:form>
                        <div class="card">
                            <p:dataTable var="dailyWeatherEntries" value="#{weatherBean.getDailyWeatherEntries()}" style="font-size: 14px" >
                            
                                <p:column headerText="Day">
                                    <h:outputText value="#{formatInstantToDate(dailyWeatherEntries.sunrise(), 0)}" />
                                </p:column>

                                <p:column headerText="Summary" style="width: 12%;">
                                    <h:outputText value="#{dailyWeatherEntries.summary()}" style="font-size: 12px"/>
                                </p:column>

                                <p:column headerText="Sunrise">
                                    <h:outputText value="#{dailyWeatherEntries.sunrise()}" />
                                </p:column>

                                <p:column headerText="Sunset">
                                    <h:outputText value="#{dailyWeatherEntries.sunset()}" />
                                </p:column>

                                <p:column headerText="Temperature [C]">
                                    <h:outputText value="#{dailyWeatherEntries.dailyTemperatureAggregation().dayTermperature()}" />
                                </p:column>

                                <p:column headerText="min. Temperature [C]">
                                    <h:outputText value="#{dailyWeatherEntries.dailyTemperatureAggregation().minimumDailyTemperature()}" />
                                </p:column>

                                <p:column headerText="max. Temperature [C]">
                                    <h:outputText value="#{dailyWeatherEntries.dailyTemperatureAggregation().maximumDailyTemperature()}" />
                                </p:column>

                                <p:column headerText="Feels Like Temperature [C]">
                                    <h:outputText value="#{dailyWeatherEntries.feelsLikeTemperatureAggregation().dayTemperature()}" />
                                </p:column>

                                <p:column headerText="Wind speed [m/s]">
                                    <h:outputText value="#{dailyWeatherEntries.windSpeed()}" />
                                </p:column>

                                <p:column headerText="Wind direction [metrol. deg]">
                                    <h:outputText value="#{dailyWeatherEntries.windDirection()}" />
                                </p:column>

                                <p:column headerText="Wind gust [m/s]">
                                    <h:outputText value="#{dailyWeatherEntries.windGust()}" />
                                </p:column>

                                <p:column headerText="Pop [?]">
                                    <h:outputText value="#{dailyWeatherEntries.probabilityOfPrecipitation()}" />
                                </p:column>

                                <p:column headerText="Rain [%]">
                                    <h:outputText value="#{dailyWeatherEntries.rain()}" />
                                </p:column>

                                <p:column headerText="Snow [%]">
                                    <h:outputText value="#{dailyWeatherEntries.snow()}" />
                                </p:column>
                            </p:dataTable>
                        </div>
                    </h:form>
                </div>
            </p:panel>
        </h:form>
    </ui:define>

</ui:composition>