<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/templates/main.xhtml">

    <ui:define name="content">
        <h:form id="weatherForm">
            <p:panel header="Weather overview for the next few days:" id="Response">
                <div>
                    <h4>Location searched for:
                        #{weatherBean.location.city},
                        #{weatherBean.location.country}
                        <!-- check wether this gets rendered even when state is null-->
                        <h:outputText value=",#{weatherBean.location.state}"
                                      rendered="#{not empty weatherBean.location.state}"/>
                        <p:commandButton id="toggleFavorite"
                                         action="#{weatherBean.toggleFavorite()}"
                                         rendered="#{sessionInfoBean.loggedIn}"
                                         icon="pi pi-heart"
                                         styleClass="#{weatherBean.isFavorite() ? 'rounded-button ui-button-help' : 'rounded-button ui-button-help ui-button-outlined'}"
                                         update="toggleFavorite"
                                         style="margin-left: 20px"/>
                    </h4>

                    <br/>

                    <h:panelGroup layout="block" style="display: flex; font-size: 14px;">

                        <h:panelGrid columns="2" styleClass="weather-info">
                            <h:outputText value="Current Weather" style="font-weight: bold; font-size: 16px;"/>
                            <h:outputText value=""/>

                            <h:outputText value="Description:" style="font-weight: bold;"/>
                            <h:outputText value="#{weatherBean.weatherDTO.currentWeather().weather().description()}"/>

                            <h:outputText value="Temperature:" style="font-weight: bold;"/>
                            <h:outputText value="#{weatherBean.weatherDTO.currentWeather().temperature()} °C"/>

                            <h:outputText value="Feels Like Temperature:" style="font-weight: bold;"/>
                            <h:outputText value="#{weatherBean.weatherDTO.currentWeather().feelsLikeTemperature()} °C"/>

                            <h:outputText value="Wind Speed:" style="font-weight: bold;"/>
                            <h:outputText
                                    value="#{weatherHelper.msToKmh(weatherBean.weatherDTO.currentWeather().windSpeed())} km/h"/>

                            <h:outputText value="Wind Direction:" style="font-weight: bold;"/>
                            <h:outputText
                                    value="#{weatherHelper.degreesToCardinal(weatherBean.weatherDTO.currentWeather().windDirection())}"/>

                            <!-- There is no POP value in weatherDTO/current weatherDTO, instead the current one from hourly weather is taken. -->
                            <h:outputText value="Pop:" style="font-weight: bold;"/>
                            <h:outputText
                                    value="#{weatherBean.getHourlyWeatherEntries().get(0).probabilityOfPrecipitation()}"/>

                        </h:panelGrid>


                        <br/>

                    </h:panelGroup>

                    <br/>

                    <h5 style="margin-top:0">Weather for the next hours:</h5>
                    <h:form>
                        <div class="card">
                            <p:dataTable var="hourlyWeatherEntries" value="#{weatherBean.getHourlyWeatherEntries()}"
                                         style="font-size: 14px" paginator="true" paginatorPosition="bottom"
                                         rows="10">

                                <p:column headerText="Time">
                                    <h:outputText
                                            value="#{weatherHelper.formatInstantToDateTime(weatherBean.weatherDTO.timezone(), hourlyWeatherEntries.timestamp(), 'dd.MM.yyyy: HH:mm')}"/>
                                </p:column>

                                <p:column headerText="Weather" style="width: 12%;">
                                    <h:outputText value="#{hourlyWeatherEntries.weather().description()}"
                                                  style="font-size: 12px"/>
                                </p:column>

                                <p:column headerText="Temperature [C]">
                                    <h:outputText value="#{hourlyWeatherEntries.temperature()}"/>
                                </p:column>

                                <p:column headerText="Feels Like Temperature [C]">
                                    <h:outputText value="#{hourlyWeatherEntries.feelsLikeTemperature()}"/>
                                </p:column>

                                <p:column headerText="Wind speed [km/h]">
                                    <h:outputText value="#{weatherHelper.msToKmh(hourlyWeatherEntries.windSpeed())}"/>
                                </p:column>

                                <p:column headerText="Wind direction">
                                    <h:outputText
                                            value="#{weatherHelper.degreesToCardinal(hourlyWeatherEntries.windDirection())}"/>
                                </p:column>

                                <p:column headerText="Pop">
                                    <h:outputText value="#{hourlyWeatherEntries.probabilityOfPrecipitation()}"/>
                                </p:column>

                                <!-- Additional premium weather stats: -->

                                <p:column headerText="Humidity [%]" rendered="#{sessionInfoBean.isUserPremium()}">
                                    <h:outputText value="#{hourlyWeatherEntries.humidity()}"/>
                                </p:column>

                                <p:column headerText="Pressure [hPa]" rendered="#{sessionInfoBean.isUserPremium()}">
                                    <h:outputText value="#{hourlyWeatherEntries.pressure()}"/>
                                </p:column>

                                <p:column headerText="Cloudiness [%]" rendered="#{sessionInfoBean.isUserPremium()}">
                                    <h:outputText value="#{hourlyWeatherEntries.clouds()}"/>
                                </p:column>

                                <p:column headerText="Visibility [m]" rendered="#{sessionInfoBean.isUserPremium()}">
                                    <h:outputText value="#{hourlyWeatherEntries.visibility()}"/>
                                </p:column>

                            </p:dataTable>
                        </div>
                    </h:form>

                    <br/>

                    <h5 style="margin-top:0">Weather for today and the next days:</h5>
                    <h:form>
                        <div class="card">
                            <p:dataTable var="dailyWeatherEntries" value="#{weatherBean.getDailyWeatherEntries()}"
                                         style="font-size: 12px">

                                <p:column headerText="Day">
                                    <h:outputText
                                            value="#{weatherHelper.formatInstantToDateTime(weatherBean.weatherDTO.timezone(), dailyWeatherEntries.timestamp(), 'dd.MM.yyyy')}"/>
                                </p:column>

                                <p:column headerText="Summary" style="width: 8%;">
                                    <h:outputText value="#{dailyWeatherEntries.summary()}" style="font-size: 10px"/>
                                </p:column>

                                <p:column headerText="Sunrise">
                                    <h:outputText
                                            value="#{weatherHelper.formatInstantToDateTime(weatherBean.weatherDTO.timezone(), dailyWeatherEntries.sunrise(), 'HH:mm')}"/>
                                </p:column>

                                <p:column headerText="Sunset">
                                    <h:outputText
                                            value="#{weatherHelper.formatInstantToDateTime(weatherBean.weatherDTO.timezone(), dailyWeatherEntries.sunset(), 'HH:mm')}"/>
                                </p:column>

                                <p:column headerText="Temperature [C]">
                                    <h:outputText
                                            value="#{dailyWeatherEntries.dailyTemperatureAggregation().dayTemperature()}"/>
                                </p:column>

                                <p:column headerText="min. Temperature [C]">
                                    <h:outputText
                                            value="#{dailyWeatherEntries.dailyTemperatureAggregation().minimumDailyTemperature()}"/>
                                </p:column>

                                <p:column headerText="max. Temperature [C]">
                                    <h:outputText
                                            value="#{dailyWeatherEntries.dailyTemperatureAggregation().maximumDailyTemperature()}"/>
                                </p:column>

                                <p:column headerText="Feels Like Temperature [C]">
                                    <h:outputText
                                            value="#{dailyWeatherEntries.feelsLikeTemperatureAggregation().dayTemperature()}"/>
                                </p:column>

                                <p:column headerText="Wind speed [km/h]">
                                    <h:outputText value="#{weatherHelper.msToKmh(dailyWeatherEntries.windSpeed())}"/>
                                </p:column>

                                <p:column headerText="Wind direction">
                                    <h:outputText
                                            value="#{weatherHelper.degreesToCardinal(dailyWeatherEntries.windDirection())}"/>
                                </p:column>

                                <p:column headerText="Wind gust [km/h]">
                                    <h:outputText value="#{weatherHelper.msToKmh(dailyWeatherEntries.windGust())}"/>
                                </p:column>

                                <p:column headerText="Pop">
                                    <h:outputText value="#{dailyWeatherEntries.probabilityOfPrecipitation()}"/>
                                </p:column>

                                <p:column headerText="Rain [mm/h]">
                                    <h:outputText value="#{dailyWeatherEntries.rain()}"/>
                                </p:column>

                                <p:column headerText="Snow [mm/h]">
                                    <h:outputText value="#{dailyWeatherEntries.snow()}"/>
                                </p:column>

                                <!-- Additional premium weather stats: -->

                                <p:column headerText="Humidity [%]" rendered="#{sessionInfoBean.isUserPremium()}">
                                    <h:outputText value="#{dailyWeatherEntries.humidity()}"/>
                                </p:column>

                                <p:column headerText="Pressure [hPa]" rendered="#{sessionInfoBean.isUserPremium()}">
                                    <h:outputText value="#{dailyWeatherEntries.pressure()}"/>
                                </p:column>

                                <p:column headerText="Dew point [C]" rendered="#{sessionInfoBean.isUserPremium()}">
                                    <h:outputText value="#{dailyWeatherEntries.dewPoint()}"/>
                                </p:column>

                                <p:column headerText="Cloudiness [%]" rendered="#{sessionInfoBean.isUserPremium()}">
                                    <h:outputText value="#{dailyWeatherEntries.clouds()}"/>
                                </p:column>

                                <p:column headerText="Moon phase" rendered="#{sessionInfoBean.isUserPremium()}">
                                    <h:outputText value="#{dailyWeatherEntries.moonPhase()}"/>
                                </p:column>

                            </p:dataTable>
                        </div>
                    </h:form>
                </div>
            </p:panel>
        </h:form>
    </ui:define>
</ui:composition>